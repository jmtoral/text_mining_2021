rmarkdown::render_site()
library(spotifyr)
joy <- get_artist_audio_features('maná')
pacman::p_load(
tidyverse,
plotly,
leaflet
pacman::p_load(
tidyverse,
plotly,
leaflet
)
pacman::p_load(
tidyverse,
plotly,
leaflet,
cowplot,
ggthemes,
hrbrthemes,
gganimate,
ggforce,
ggridges,
gganimate,
ggrepel,
ggpol)
pacman::p_load(
tidyverse,
plotly,
leaflet,
cowplot,
ggthemes,
hrbrthemes,
gganimate,
ggforce,
ggridges,
gganimate,
ggrepel,
ggpol,
waffle,
spotifyr,
hrbrthemes)
Sys.setenv(SPOTIFY_CLIENT_ID = 'a320cbb22dd74503ba0ce8a92be8bb3a')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '5e41e4faa80a4aadbbce82e99ac2fcd2')
access_token <- get_spotify_access_token()
beatles <- get_artist_audio_features('the beatles')
beatles
View(beatles)
View(beatles)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(
tidyverse,
gapminder,
plotly,
leaflet,
cowplot,
ggthemes,
hrbrthemes,
gganimate,
ggforce,
ggridges,
gganimate,
ggrepel,
ggpol,
waffle,
spotifyr,
hrbrthemes)
glimpse(beatles)
mana <- get_artist_audio_features('maná')
View(mana)
viz1 <- mana %>%
select(album_release_year, danceability:tempo)
View(viz1)
viz1 <- mana %>%
select(artist_name, album_name, track_name,
disc_number, album_release_year, danceability:tempo)
View(viz1)
viz1
ggplot(
data = viz1,
x = album_release_year,
y = valence
)
ggplot(
data = viz1,
x = album_release_year,
y = valence
) +
geom_boxjitter()
ggplot(
data = viz1,
aes(x = album_release_year,
y = valence)
) +
geom_boxjitter()
ggplot(
data = viz1,
aes(
x = album_release_year,
y = valence,
color = album_release_year
)
) +
geom_boxjitter()
ggplot(
data = viz1,
aes(
x = album_release_year,
y = valence,
color = album_release_year
)
) +
geom_boxplot()
ggplot(
data = viz1,
aes(
x = album_release_year,
y = valence,
color = as.factor(album_release_year)
)
) +
geom_boxplot()
ggplot(
data = viz1,
aes(
x = as.factor(album_release_year),
y = valence,
color = album_release_year
)
) +
geom_boxplot()
ggplot(
data = viz1,
aes(
x = as.factor(album_release_year),
y = valence,
color = as.factor(album_release_year)
)
) +
geom_boxplot()
ggplot(
data = viz1,
aes(
x = as.factor(album_release_year),
y = valence,
color = as.factor(album_release_year)
)
) +
geom_boxplot() +
guides(color = F)
x = as.factor(album_release_year),
ggplot(
data = viz1,
aes(
x = as.factor(album_release_year),
y = valence
)) +
geom_boxplot() +
guides(color = F)
ggplot(
data = viz1,
aes(
x = as.factor(album_release_year),
y = valence
)) +
geom_boxplot() +
geom_violin(fill = "skyblue", color = NA) + # violins in
geom_sina(size = 0.75)
ggplot(
data = viz1,
aes(
x = as.factor(album_release_year),
y = valence
)) +
geom_violin(fill = "skyblue", color = NA) + # violins in
geom_sina(size = 0.75)
geom_sina()
?geom_sina()
ggplot(
data = viz1,
aes(
x = as.factor(album_release_year),
y = valence
)) +
geom_violin(fill = "skyblue", color = NA) + # violins in
geom_poin()
ggplot(
data = viz1,
aes(
x = as.factor(album_release_year),
y = valence
)) +
geom_violin(fill = "skyblue", color = NA) + # violins in
geom_point()
ggplot(
data = viz1,
aes(
x = as.factor(album_release_year),
y = valence
)) +
geom_violin(fill = "skyblue", color = NA) + # violins in
geom_jitter()
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse, quanteda, # Minería de texto
quanteda.textmodels, # modelos de minería de texto
glmnet, # Modelos generalizados lineales
caret, #Machine Learning
knitr, # Tabblas
stargazer,
manifestoR,
rtweet) # Machine learning
mp_setapikey("manifesto_apikey.txt")
mx_2010 <-  mp_corpus(countryname == "Mexico" & date > 201200)
x <- tidylibrary(tidytext)
x <- library(tidytext)
library(tidytext)
x <- tidy(mx_2010)
x
x <- x[1]
View(x)
x <- tidy(mx_2010)
x <- x[1,]
View(x)
x <- tidy(mx_2010) %>% write.csv("partidos_mexico.csv")
tidy(mx_2010) %>% write.csv("partidos_mexico.csv")
prt <- read_csv("partidos_mp.csv")
prt
mx_2010  <- corpus(dat_inaug, text_field = "text")
mx_2010  <- corpus(prt, text_field = "text")
mx_2010
prt <- read_csv("partidos_mp.csv") %>%
mutate(text = str_squish(text))
mx_2010  <- corpus(prt, text_field = "text")
mx_2010
z <- prt[1,]
View(z)
prt <- read_csv("partidos_mexico.csv") %>%
mutate(text = str_squish(text))
z <- prt[1,]
View(z)
prt <- read_csv("partidos_mexico.csv",
locale = locale(encoding="UTF-8")) %>%
mutate(text = str_squish(text))
View(z)
z <- prt[1,]
View(z)
prt <- read_csv("partidos_mexico.csv",
locale = locale(encoding="LATIN1")) %>%
mutate(text = str_squish(text))
z <- prt[1,]
View(z)
prt_name <- read_csv("party_names.csv")
View(prt_name)
prt_name <- read_csv("party_names.csv",
locale = locale(encoding="LATIN1"))
View(prt_name)
prt %>%
left_join(prt_name)
prt %>%
left_join(prt_name) %>%
write.csv("corpus_partidos.csv")
prt <- read_csv("corpus_partidos.csv",
locale = locale(encoding="LATIN1")) %>%
mutate(text = str_squish(text))
mx_2010  <- corpus(prt, text_field = "text")
mx_2010
#mp_setapikey("manifesto_apikey.txt")
#mx_2010 <-  mp_corpus(countryname == "Mexico" & date > 201200)
#tidy(mx_2010) %>% write.csv("partidos_mexico.csv")
#mx_2010 <- corpus(mx_2010)
mx_2010 <- mx_2010  %>%
dfm(remove_punct = TRUE, remove_url = TRUE, remove_symbols = TRUE) %>%
dfm_remove(pattern = stopwords("es"))
mx_2010  %>% docvars() %>% names()
mx_2010 %>%
docvars(field = "title") %>%
head(20)
dfmat_party <- dfm_group(mx_2010, groups = "party")
dfmat_users <- dfmat_party %>%
dfm_select(min_nchar = 2) %>%
dfm_trim(min_termfreq = 10)
dfmat_users <- dfmat_users[ntoken(dfmat_users) > 50,]
tstat_dist <- as.dist(textstat_dist(dfmat_users))
user_clust <- hclust(tstat_dist)
plot(user_clust)
dfmat_party <- dfm_group(mx_2010, groups = "party_name")
dfmat_users <- dfmat_party %>%
dfm_select(min_nchar = 2) %>%
dfm_trim(min_termfreq = 10)
dfmat_users <- dfmat_users[ntoken(dfmat_users) > 50,]
tstat_dist <- as.dist(textstat_dist(dfmat_users))
user_clust <- hclust(tstat_dist)
plot(user_clust)
dfmat_party <- dfm_group(mx_2010, groups = "party")
dfmat_users <- dfmat_party %>%
dfm_select(min_nchar = 2) %>%
dfm_trim(min_termfreq = 10)
dfmat_users <- dfmat_users[ntoken(dfmat_users) > 50,]
tstat_dist <- as.dist(textstat_dist(dfmat_users))
user_clust <- hclust(tstat_dist)
plot(user_clust)
prt <- read_csv("partidos_mexico.csv",
locale = locale(encoding="LATIN1")) %>%
mutate(text = str_squish(text))
prt_name <- read_csv("party_names.csv",
locale = locale(encoding="LATIN1"))
prt %>%
left_join(prt_name) %>%
write.csv("corpus_partidos.csv")
prt <- read_csv("corpus_partidos.csv",
locale = locale(encoding="LATIN1")) %>%
mutate(text = str_squish(text))
mx_2010  <- corpus(prt, text_field = "text")
#mp_setapikey("manifesto_apikey.txt")
#mx_2010 <-  mp_corpus(countryname == "Mexico" & date > 201200)
#tidy(mx_2010) %>% write.csv("partidos_mexico.csv")
mx_2010 <- corpus(mx_2010)
mx_2010 <- mx_2010  %>%
dfm(remove_punct = TRUE, remove_url = TRUE, remove_symbols = TRUE) %>%
dfm_remove(pattern = stopwords("es"))
mx_2010  %>% docvars() %>% names()
mx_2010 %>%
docvars(field = "title") %>%
head(20)
dfmat_party <- dfm_group(mx_2010, groups = "party")
dfmat_users <- dfmat_party %>%
dfm_select(min_nchar = 2) %>%
dfm_trim(min_termfreq = 10)
dfmat_users <- dfmat_users[ntoken(dfmat_users) > 50,]
tstat_dist <- as.dist(textstat_dist(dfmat_users))
user_clust <- hclust(tstat_dist)
plot(user_clust)
dfmat_party <- dfm_group(mx_2010, groups = "party_name")
dfmat_users <- dfmat_party %>%
dfm_select(min_nchar = 2) %>%
dfm_trim(min_termfreq = 10)
dfmat_users <- dfmat_users[ntoken(dfmat_users) > 50,]
tstat_dist <- as.dist(textstat_dist(dfmat_users))
user_clust <- hclust(tstat_dist)
plot(user_clust)
dfmat_users <- dfmat_party %>%
dfm_select(min_nchar = 2) %>%
dfm_trim(min_termfreq = 50)
tstat_dist <- as.dist(textstat_dist(dfmat_users))
user_clust <- hclust(tstat_dist)
plot(user_clust)
dfmat_users <- dfmat_party %>%
dfm_select(min_nchar = 2) %>%
dfm_trim(min_termfreq = 200)
tstat_dist <- as.dist(textstat_dist(dfmat_users))
user_clust <- hclust(tstat_dist)
plot(user_clust)
dfmat_users <- dfmat_party %>%
dfm_select(min_nchar = 2) %>%
dfm_trim(min_termfreq = 2)
tstat_dist <- as.dist(textstat_dist(dfmat_users))
user_clust <- hclust(tstat_dist)
plot(user_clust)
dfmat_ger <- dfm(mx_2010, remove = stopwords("es"), remove_punct = TRUE)
# apply Wordscores algorithm to document-feature matrix
tmod_ws <- textmodel_wordscores(dfmat_ger, y = corp_ger$ref_score, smooth = 1)
# apply Wordscores algorithm to document-feature matrix
tmod_ws <- textmodel_wordscores(dfmat_ger, y = mx_2010$ref_score, smooth = 1)
corp_ger <- download(url = "https://www.dropbox.com/s/uysdoep4unfz3zp/data_corpus_germanifestos.rds?dl=1")
require(quanteda)
require(quanteda.textmodels)
require(quanteda.corpora)
corp_ger <- download(url = "https://www.dropbox.com/s/uysdoep4unfz3zp/data_corpus_germanifestos.rds?dl=1")
View(corp_ger)
dfmat_irish <- dfm(mx_2010, remove_punct = TRUE)
tmod_wf <- textmodel_wordfish(dfmat_irish, dir = c(6, 5))
summary(tmod_wf)
textplot_scale1d(tmod_wf)
mx_2010
tmod_wf <- textmodel_wordfish(dfmat_party, dir = c(1, 2))
summary(tmod_wf)
dfmat_party
tmod_wf <- textmodel_wordfish(dfmat_party, dir = c(3, 5))
summary(tmod_wf)
textplot_scale1d(tmod_wf)
dfmat_irish <- dfm(mx_2010, remove_punct = TRUE)
dfmat_irish
docvars(mx_2010)
texts(mx_2010)
install.packages("quanteda")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
R.Version()
rmarkdown::render_site()
